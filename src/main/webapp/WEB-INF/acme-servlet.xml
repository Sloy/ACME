<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.2.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
http://www.springframework.org/schema/data/jpa 
http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd
 http://www.springframework.org/schema/cache 
 http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
 http://www.springframework.org/schema/util 
 http://www.springframework.org/schema/util/spring-util-3.2.xsd">


	<context:annotation-config />
	<context:spring-configured />
	<context:component-scan base-package="com.acme" />
	<context:component-scan base-package="com.acme.converters" />
	<tx:annotation-driven />
	<mvc:annotation-driven conversion-service="conversionService" />

	<jpa:repositories base-package="com.acme.repository" />
	<!-- el soporte de anotaciones para el uso de la cache -->
	<cache:annotation-driven />

	<!--========== Spring Data Source ========== -->

	<bean class="java.net.URI" id="dbUrl">
		<constructor-arg value="#{systemEnvironment['DATABASE_URL']}" />
	</bean>

	<bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSourceProduction">
		<property name="driverClassName" value="${db.driverClass}" />
		<property name="url"
			value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }" />
		<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
		<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }" />
	    <property name="connectionProperties" value="ssl=true;sslfactory=org.postgresql.ssl.NonValidatingFactory;"/>
	</bean>
	
	<bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSourcePostgres">
		<property name="driverClassName" value="${db.driverClass}" />
		<property name="url" value="jdbc:postgresql://127.0.0.1/acme"/>
		<property name="username" value="rafa" />
		<property name="password" value="" />
	</bean>

	<bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSourceDevelopment">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://localhost/acme</value>
		</property>
		<property name="username">
			<value>root</value>
		</property>
		<property name="password">
			<value>root</value>
		</property>
	</bean>

	<!--========== /Spring Data Source ========== -->

	<bean
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		id="entityManagerFactory">
		<property name="persistenceUnitName" value="Grupo15.ACME" />
		<property name="dataSource" ref="${db.driverId}" />
	</bean>

	<!--========== TransactionManager ========== -->

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="dataSource" ref="${db.driverId}" />
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!--========== /TransactionManager Repository ========== -->

	<!--========== /TransactionManager Service ========== -->
	<bean id="servicecertification" name="servicecertification"
		class="com.acme.services.CertificationService" />
	<bean id="serviceuser" name="serviceuser" class="com.acme.services.UserService" />

	<bean id="servicegeography" name="servicegeography"
		class="com.acme.services.GeographyService" />
	<bean id="serviceexamination" name="serviceexamination"
		class="com.acme.services.ExaminationService" />
	<bean id="serviceregister" name="serviceregister"
		class="com.acme.services.RegisterService" />

	<!-- **************************************************************** -->
	<!-- RESOURCE FOLDERS CONFIGURATION -->
	<!-- Dispatcher configuration for serving static resources -->
	<!-- **************************************************************** -->
	<mvc:resources location="/img/" mapping="/img/**" />
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources mapping="/webjars/**"
		location="classpath:/META-INF/resources/webjars/" />


	<!-- **************************************************************** -->
	<!-- SPRING ANNOTATION PROCESSING -->
	<!-- **************************************************************** -->


	<!-- **************************************************************** -->
	<!-- MESSAGE EXTERNALIZATION/INTERNATIONALIZATION -->
	<!-- Standard Spring MessageSource implementation -->
	<!-- **************************************************************** -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="Messages" />
	</bean>

	<!-- **************************************************************** -->
	<!-- THYMELEAF-SPECIFIC ARTIFACTS -->
	<!-- TemplateResolver <- TemplateEngine <- ViewResolver -->
	<!-- **************************************************************** -->

	<bean id="templateResolver"
		class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<property name="prefix" value="/templates/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML5" />
		<!-- Template cache is true by default. Set to false if you want -->
		<!-- templates to be automatically updated when modified. -->
		<property name="cacheable" value="true" />
	</bean>
	<bean id="html5ValDialect" class="net.sourceforge.html5val.Html5ValDialect">
		<property name="additionalPerformers">
			<set>
				<bean class="com.acme.util.validation.html.IdPerformer" />
			</set>
		</property>
	</bean>
	<bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
		<property name="additionalDialects">
			<set>
				<bean
					class="com.github.dandelion.datatables.thymeleaf.dialect.DataTablesDialect" />
				<bean class="net.sourceforge.html5val.Html5ValDialect" />
				<bean
					class="org.thymeleaf.extras.springsecurity3.dialect.SpringSecurityDialect" />
			</set>
		</property>
	</bean>

	<bean class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
	</bean>

	<!-- el Manager de la cache haciendo uso del soporte por defecto de ehcache -->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehcache" />
	</bean>

	<!-- la configuración de las caches haciendo uso del fichero de propiedades 
		típico de ehcache -->
	<bean id="ehcache"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
		p:config-location="classpath:ehcache.xml" p:shared="true" />

	<!-- - This bean resolves specific types of exceptions to corresponding 
		logical - view names for error views. -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<!-- view name resolved using bean of type InternalResourceViewResolver 
			(declared in mvc-view-config.xml) -->
		<property name="defaultErrorView" value="error" />
		<!-- results into 'WEB-INF/jsp/exception.jsp' -->
		<property name="warnLogCategory" value="warn" />
		<!-- needed otherwise exceptions won't be logged anywhere -->
	</bean>

	<bean id="conversionService"
		class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<!-- <bean id="certificationToString" class="com.acme.converters.CertificationToString" /> -->
				<bean id="stringToCertification" class="com.acme.converters.StringToCertification" />
			</list>
		</property>
	</bean>
</beans>


